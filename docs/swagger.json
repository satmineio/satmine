{
    "swagger": "2.0",
    "info": {
        "description": "Mining Protocol for Inscription Miners Based on the BTC Ordinals Protocol",
        "title": "BTC Ordinals Mining Protocol",
        "termsOfService": "https://github.com/SatMine/",
        "contact": {},
        "version": "1.01"
    },
    "basePath": "/api/v1",
    "paths": {
        "/mrc20/addressbalance": {
            "get": {
                "description": "Retrieves the balance for a specific address and token (tick)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve the balance for a specific address and token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ticker",
                        "name": "tick",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance of the token for the specified address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/addressbalances": {
            "get": {
                "description": "Retrieves all token balances associated with a given address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve all token balances for a specific address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of balances for each token",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/addressinfo": {
            "get": {
                "description": "Retrieves inscription IDs for both MRC721 and MRC20 tokens associated with a given address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve inscription IDs for both MRC721 and MRC20 tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inscription IDs for MRC721 and MRC20 tokens",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/addressmrc20bar": {
            "get": {
                "description": "Retrieves a list of MRC-20 balances for a given address, showing each token's name and available balance. If a token name is provided, filter the results accordingly.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve a list of MRC-20 balances for a given address, optionally filtered by token name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "MRC20 Token Name",
                        "name": "mrc20Name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of MRC-20 balances",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetAddressMrc20BarResult"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/addressmrc20list": {
            "get": {
                "description": "Retrieves a paginated list of MRC-20 inscriptions for a given address and MRC-20 name, sorted by inscription number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve a paginated list of MRC-20 inscriptions for a given address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "MRC-20 Name",
                        "name": "mrc20name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Page Index",
                        "name": "pageIndex",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Page Size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of MRC-20 inscriptions",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetAddressMrc20ListResult"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/addressmrc721bar": {
            "get": {
                "description": "Retrieves a list of unique MRC-721 inscriptions associated with a given address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve MRC-721 inscriptions by address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address to query MRC-721 inscriptions",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of unique MRC-721 inscription names",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetAddressMrc721BarResult"
                        }
                    },
                    "501": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetAddressMrc721BarResult"
                        }
                    }
                }
            }
        },
        "/mrc20/addressmrc721barplus": {
            "get": {
                "description": "Retrieves statistics like total amount, total power, and total reward of MRC-721 inscriptions for a given address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve statistics of MRC-721 inscriptions for a given address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistics of MRC-721 inscriptions",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetAddressMrc721BarPlusResult"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/addressmrc721holders": {
            "get": {
                "description": "Retrieves a paginated list of MRC-721 holders for a given MRC-721 name, sorted by the number of inscriptions per address in descending order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve a paginated list of MRC-721 holders for a given MRC-721 name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MRC-721 Name",
                        "name": "mrc721name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Page Index",
                        "name": "pageIndex",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Page Size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of MRC-721 holders along with the total count",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetAddressMrc721HoldersResult"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/addressmrc721list": {
            "get": {
                "description": "Retrieves a paginated list of MRC-721 inscriptions for a given address and MRC-721 name, sorted by inscription number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve a paginated list of MRC-721 inscriptions for a given address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "MRC-721 Name",
                        "name": "mrc721name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Page Index",
                        "name": "pageIndex",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Page Size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of MRC-721 inscriptions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/satmine.WebInscription"
                            }
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/allmrc721": {
            "get": {
                "description": "Retrieves all MRC-721 genesis inscriptions and sorts them by number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve all MRC-721 genesis inscriptions",
                "responses": {
                    "200": {
                        "description": "List of MRC-721 genesis inscriptions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/satmine.Mrc721GenesisDataWeb"
                            }
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/blockbyhash": {
            "get": {
                "description": "Retrieves a block from the blockchain by its specified hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve a block by its hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block Hash",
                        "name": "blockHash",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Block information",
                        "schema": {
                            "$ref": "#/definitions/satmine.HookBlock"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/blockbyheight": {
            "get": {
                "description": "Retrieves a block from the blockchain by its specified height",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve a block by its height",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block Height",
                        "name": "blockHeight",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Block information",
                        "schema": {
                            "$ref": "#/definitions/satmine.HookBlock"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/blocks": {
            "get": {
                "description": "Retrieves blocks from the blockchain based on a starting block height and an offset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve blocks within a range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Starting Block Height",
                        "name": "blockHeight",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Offset Height",
                        "name": "offsetHeight",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of blocks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/satmine.SimpleHookBlock"
                            }
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/burninfo": {
            "get": {
                "description": "Retrieves burn information including balance, power, burn amount, and other relevant details for a given inscription ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve burn information for a specific inscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inscription ID",
                        "name": "inscriptionID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Burn information for the inscription",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetBurnInfoResult"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/genesisdata": {
            "get": {
                "description": "Retrieves genesis data including identification details and statistics relevant to the inscription of a given MRC-721 name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve genesis data for a given MRC-721 name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MRC-721 name",
                        "name": "mrc721name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Genesis data of the specified MRC-721 name",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetGenesisDataResult"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/genesisprotocol": {
            "get": {
                "description": "Retrieves the genesis protocol data for a given MRC721 name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve MRC721 genesis protocol",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MRC721 Name",
                        "name": "mrc721name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The MRC721 genesis protocol data",
                        "schema": {
                            "$ref": "#/definitions/satmine.MRC721Protocol"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/getrecords": {
            "get": {
                "description": "Retrieves a list of records based on address, record type, page number, page size, and order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "record"
                ],
                "summary": "Retrieve records from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address identifier",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Record type identifier",
                        "name": "rectype",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Order of record retrieval (true for ascending, false for descending)",
                        "name": "ascend",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of records",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/hookevents": {
            "post": {
                "description": "Parses and processes events related to OrdHook.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrdHook"
                ],
                "summary": "Process OrdHook events",
                "parameters": [
                    {
                        "description": "Event Payload",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rpc.OrdHookEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A message confirming successful processing",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error message in case of failure to process the event",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/mrc20/inscription": {
            "get": {
                "description": "Retrieves the inscription information for a given inscription ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve inscription information by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inscription ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inscription information wrapped in a result structure",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetInscriptionResult"
                        }
                    },
                    "400": {
                        "description": "Error message and code if retrieval fails",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetInscriptionResult"
                        }
                    }
                }
            }
        },
        "/mrc20/inscriptionplus": {
            "get": {
                "description": "Retrieves the inscription information for a given inscription ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve inscription information by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inscription ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inscription information",
                        "schema": {
                            "$ref": "#/definitions/satmine.HookInscription"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/latestblock": {
            "get": {
                "description": "Retrieves the most recent block number from the blockchain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve the latest block number",
                "responses": {
                    "200": {
                        "description": "The latest block number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/lotterylist": {
            "get": {
                "description": "Retrieves a list of lottery data including block height, address, inscription ID, and win amount for a specific MRC-721 name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve lottery data list for a given MRC-721 name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MRC-721 Name",
                        "name": "mrc721name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lottery data list for the specified MRC-721 name",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetLotteryListResult"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/miningprofitchart": {
            "post": {
                "description": "Parses input JSON into MRC721Protocol format and returns it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Parse and Return MRC721Protocol Data",
                "parameters": [
                    {
                        "example": "\"{\\\"p\\\": \\\"mrc-721\\\", \\\"miner\\\": {\\\"name\\\": \\\"Demo 721\\\", \\\"max\\\": \\\"100\\\", \\\"lim\\\":\\\"5\\\"}, \\\"token\\\": {\\\"tick\\\": \\\"coin\\\", \\\"total\\\": \\\"2100000000000000\\\", \\\"beg\\\": \\\"50000000000\\\", \\\"halv\\\": \\\"10\\\", \\\"dcr\\\": \\\"0.555\\\"}, \\\"ltry\\\": {\\\"pool\\\": \\\"0.05\\\", \\\"intvl\\\": \\\"9\\\", \\\"winp\\\": \\\"0.10\\\", \\\"dist\\\": \\\"0.60\\\"}, \\\"burn\\\": {\\\"unit\\\": \\\"8000000000\\\", \\\"boost\\\": \\\"0.05\\\"}}\"",
                        "description": "MRC721Protocol JSON data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parsed MRC721Protocol data",
                        "schema": {
                            "$ref": "#/definitions/satmine.MRC721Protocol"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/mrc721collections": {
            "get": {
                "description": "Retrieves a list of collections associated with a given MRC-721 name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve MRC-721 collections by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MRC-721 name to query collections",
                        "name": "mrc721name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of MRC-721 collections",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetMrc721CollectionsResult"
                        }
                    },
                    "501": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetMrc721CollectionsResult"
                        }
                    }
                }
            }
        },
        "/mrc20/mrcallinscription": {
            "get": {
                "description": "associated inscription data, genesis data, and the relevant MRC-20 or MRC-721 protocol details. MrcType(mrc721,mrc20,unknown,inscription)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve detailed information about a specific MRC inscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inscription ID",
                        "name": "inscriptionId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detailed information about the MRC inscription",
                        "schema": {
                            "$ref": "#/definitions/rpc.WebMrcAllInscriptionResult"
                        }
                    },
                    "400": {
                        "description": "Error message if the inscription ID is not provided or invalid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "501": {
                        "description": "Error message if there's an internal error during data retrieval",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/onemrc721": {
            "get": {
                "description": "Retrieves a single MRC-721 genesis inscription based on the provided name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Retrieve a single MRC-721 genesis inscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MRC-721 Name",
                        "name": "mrc721Name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MRC-721 genesis inscription",
                        "schema": {
                            "$ref": "#/definitions/satmine.Mrc721GenesisDataWeb"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/postrecord": {
            "post": {
                "description": "Writes a new record with an incrementing index to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "record"
                ],
                "summary": "Write a record to the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address identifier",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Record type identifier",
                        "name": "rectype",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Message content to be stored",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message with code and message text",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error message with code and message text",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/mrc20/scanmissingblocks": {
            "get": {
                "description": "Scans the blockchain database from a starting block to an ending block and retrieves a list of missing block numbers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Scans and retrieves a list of missing block numbers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Begin Block Number",
                        "name": "begin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "End Block Number",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of missing block numbers",
                        "schema": {
                            "$ref": "#/definitions/rpc.ScanMissingBlocksResult"
                        }
                    },
                    "400": {
                        "description": "Error message if retrieval fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mrc20/validatename": {
            "get": {
                "description": "Checks if a given MRC721 or MRC20 name exists in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mrc20"
                ],
                "summary": "Validate MRC721 or MRC20 name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name to validate",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind of token ('mrc721' or 'mrc20')",
                        "name": "kind",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response with validation result and message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error message if validation fails",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rpc.GetAddressMrc20BarData": {
            "type": "object",
            "properties": {
                "bars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/satmine.WebMrc20Bar"
                    }
                }
            }
        },
        "rpc.GetAddressMrc20BarResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/rpc.GetAddressMrc20BarData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "rpc.GetAddressMrc20ListData": {
            "type": "object",
            "properties": {
                "all_count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/satmine.WebMrc20Inscription"
                    }
                }
            }
        },
        "rpc.GetAddressMrc20ListResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/rpc.GetAddressMrc20ListData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "rpc.GetAddressMrc721BarPlusData": {
            "type": "object",
            "properties": {
                "bars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/satmine.WebMrc721Bar"
                    }
                }
            }
        },
        "rpc.GetAddressMrc721BarPlusResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/rpc.GetAddressMrc721BarPlusData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "rpc.GetAddressMrc721BarResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "rpc.GetAddressMrc721HoldersData": {
            "type": "object",
            "properties": {
                "all_count": {
                    "type": "integer"
                },
                "holders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/satmine.WebMrc721Holder"
                    }
                }
            }
        },
        "rpc.GetAddressMrc721HoldersResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/rpc.GetAddressMrc721HoldersData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "rpc.GetBurnInfoResult": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Response code",
                    "type": "integer"
                },
                "data": {
                    "description": "Burn information data",
                    "allOf": [
                        {
                            "$ref": "#/definitions/satmine.WebBurnInfo"
                        }
                    ]
                },
                "message": {
                    "description": "Response message",
                    "type": "string"
                }
            }
        },
        "rpc.GetGenesisDataResult": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Status code of the response",
                    "type": "integer"
                },
                "data": {
                    "description": "Genesis data of a MRC-721 name",
                    "allOf": [
                        {
                            "$ref": "#/definitions/satmine.Mrc721GenesisData"
                        }
                    ]
                },
                "message": {
                    "description": "Description message about the result",
                    "type": "string"
                }
            }
        },
        "rpc.GetInscriptionResult": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "HTTP status code",
                    "type": "integer"
                },
                "data": {
                    "description": "Data payload containing the inscription details, nil if error occurs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/satmine.HookInscription"
                        }
                    ]
                },
                "message": {
                    "description": "Descriptive message about the result",
                    "type": "string"
                }
            }
        },
        "rpc.GetLotteryListData": {
            "type": "object",
            "properties": {
                "lotteries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/satmine.LotteryData"
                    }
                }
            }
        },
        "rpc.GetLotteryListResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/rpc.GetLotteryListData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "rpc.GetMrc721CollectionsResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/satmine.WebCollections"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "rpc.InscriptionNumber": {
            "type": "object",
            "properties": {
                "classic": {
                    "type": "integer"
                },
                "jubilee": {
                    "type": "integer"
                }
            }
        },
        "rpc.OrdHookBlock": {
            "type": "object",
            "properties": {
                "block_identifier": {
                    "$ref": "#/definitions/rpc.OrdHookBlockIdentifier"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "parent_block_identifier": {
                    "$ref": "#/definitions/rpc.OrdHookBlockIdentifier"
                },
                "timestamp": {
                    "type": "integer"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rpc.OrdHookTransaction"
                    }
                }
            }
        },
        "rpc.OrdHookBlockIdentifier": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                }
            }
        },
        "rpc.OrdHookChain": {
            "type": "object",
            "properties": {
                "is_streaming_blocks": {
                    "type": "boolean"
                },
                "predicate": {
                    "$ref": "#/definitions/rpc.OrdHookPredicate"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "rpc.OrdHookDestination": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "rpc.OrdHookEvent": {
            "type": "object",
            "properties": {
                "apply": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rpc.OrdHookBlock"
                    }
                },
                "chainhook": {
                    "$ref": "#/definitions/rpc.OrdHookChain"
                },
                "rollback": {
                    "description": "Assuming rollback has a similar structure",
                    "type": "array",
                    "items": {}
                }
            }
        },
        "rpc.OrdHookInscriptionRevealed": {
            "type": "object",
            "properties": {
                "content_bytes": {
                    "type": "string"
                },
                "content_length": {
                    "type": "integer"
                },
                "content_type": {
                    "type": "string"
                },
                "curse_type": {
                    "description": "Assuming curse_type can be null, hence using a pointer",
                    "type": "string"
                },
                "inscriber_address": {
                    "type": "string"
                },
                "inscription_fee": {
                    "type": "integer"
                },
                "inscription_id": {
                    "type": "string"
                },
                "inscription_input_index": {
                    "type": "integer"
                },
                "inscription_number": {
                    "$ref": "#/definitions/rpc.InscriptionNumber"
                },
                "inscription_output_value": {
                    "type": "integer"
                },
                "ordinal_block_height": {
                    "type": "integer"
                },
                "ordinal_number": {
                    "type": "integer"
                },
                "ordinal_offset": {
                    "type": "integer"
                },
                "satpoint_post_inscription": {
                    "type": "string"
                },
                "transfers_pre_inscription": {
                    "type": "integer"
                },
                "tx_index": {
                    "type": "integer"
                }
            }
        },
        "rpc.OrdHookInscriptionTransferred": {
            "type": "object",
            "properties": {
                "destination": {
                    "$ref": "#/definitions/rpc.OrdHookDestination"
                },
                "inscription_id": {
                    "type": "string"
                },
                "post_transfer_output_value": {
                    "type": "integer"
                },
                "satpoint_post_transfer": {
                    "type": "string"
                },
                "satpoint_pre_transfer": {
                    "type": "string"
                },
                "tx_index": {
                    "type": "integer"
                }
            }
        },
        "rpc.OrdHookOrdinalOperation": {
            "type": "object",
            "properties": {
                "inscription_revealed": {
                    "$ref": "#/definitions/rpc.OrdHookInscriptionRevealed"
                },
                "inscription_transferred": {
                    "$ref": "#/definitions/rpc.OrdHookInscriptionTransferred"
                }
            }
        },
        "rpc.OrdHookPredicate": {
            "type": "object",
            "properties": {
                "operation": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                }
            }
        },
        "rpc.OrdHookTransaction": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/rpc.OrdHookTransactionMetadata"
                },
                "operations": {
                    "type": "array",
                    "items": {}
                },
                "transaction_identifier": {
                    "$ref": "#/definitions/rpc.OrdHookBlockIdentifier"
                }
            }
        },
        "rpc.OrdHookTransactionMetadata": {
            "type": "object",
            "properties": {
                "ordinal_operations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rpc.OrdHookOrdinalOperation"
                    }
                },
                "proof": {}
            }
        },
        "rpc.ScanMissingBlocksResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "description": "Omitempty will not show \"data\" in JSON if it's null",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "rpc.WebMrcAllInscriptionResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/satmine.WebMrcAllInscription"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "satmine.Burn": {
            "type": "object",
            "properties": {
                "boost": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "satmine.HookBlock": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string"
                },
                "block_height": {
                    "type": "string"
                },
                "inscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/satmine.HookInscription"
                    }
                },
                "timestamp": {
                    "type": "integer"
                },
                "transfers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/satmine.HookTransfer"
                    }
                }
            }
        },
        "satmine.HookInscription": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "block_height": {
                    "type": "integer"
                },
                "content_byte": {
                    "description": "binary data",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "content_length": {
                    "type": "integer"
                },
                "content_type": {
                    "type": "string"
                },
                "curse_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "inscription_fee": {
                    "type": "integer"
                },
                "inscription_input_index": {
                    "type": "integer"
                },
                "inscription_output_value": {
                    "type": "integer"
                },
                "number": {
                    "type": "integer"
                },
                "offset": {
                    "type": "string"
                },
                "ordinal_height": {
                    "type": "integer"
                },
                "sat": {
                    "type": "integer"
                },
                "satpoint_post_inscription": {
                    "type": "string"
                },
                "transfers_pre_inscription": {
                    "type": "integer"
                },
                "tx_index": {
                    "type": "integer"
                }
            }
        },
        "satmine.HookTransfer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "post_transfer_output_value": {
                    "type": "integer"
                },
                "satpoint_post_transfer": {
                    "type": "string"
                },
                "satpoint_pre_transfer": {
                    "type": "string"
                },
                "to_address": {
                    "type": "string"
                },
                "tx_index": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "satmine.Lottery": {
            "type": "object",
            "properties": {
                "dist": {
                    "type": "string"
                },
                "intvl": {
                    "type": "string"
                },
                "pool": {
                    "type": "string"
                },
                "winp": {
                    "type": "string"
                }
            }
        },
        "satmine.LotteryData": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "block_hash": {
                    "type": "string"
                },
                "block_height": {
                    "type": "string"
                },
                "dist": {
                    "type": "string"
                },
                "inscription_id": {
                    "type": "string"
                },
                "jackpot_accum": {
                    "type": "string"
                },
                "mrc721name": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "round": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "integer"
                },
                "win_amount": {
                    "type": "string"
                },
                "winp": {
                    "type": "string"
                }
            }
        },
        "satmine.MRC20Protocol": {
            "type": "object",
            "properties": {
                "amt": {
                    "type": "string"
                },
                "dec": {
                    "description": "Pointer to allow the field to be empty",
                    "type": "string"
                },
                "insc": {
                    "type": "string"
                },
                "op": {
                    "type": "string"
                },
                "p": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                }
            }
        },
        "satmine.MRC721Protocol": {
            "type": "object",
            "properties": {
                "burn": {
                    "description": "Pointer to allow the field to be empty",
                    "allOf": [
                        {
                            "$ref": "#/definitions/satmine.Burn"
                        }
                    ]
                },
                "ltry": {
                    "description": "Pointer to allow the field to be empty",
                    "allOf": [
                        {
                            "$ref": "#/definitions/satmine.Lottery"
                        }
                    ]
                },
                "miner": {
                    "$ref": "#/definitions/satmine.Miner"
                },
                "p": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/satmine.Token"
                }
            }
        },
        "satmine.Miner": {
            "type": "object",
            "properties": {
                "lim": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "satmine.Mrc721GenesisData": {
            "type": "object",
            "properties": {
                "block_height": {
                    "description": "Height of the block in the blockchain where the inscription was recorded",
                    "type": "string"
                },
                "end_block_height": {
                    "description": "The block height of the inscription that ended the mining round",
                    "type": "string"
                },
                "end_id": {
                    "description": "The ID of the inscription that ended the mining round",
                    "type": "string"
                },
                "end_timestamp": {
                    "description": "The timestamp of the block in the blockchain where the inscription that ended the mining round was recorded",
                    "type": "integer"
                },
                "genesis_address": {
                    "description": "Address associated with the genesis transaction of the inscription",
                    "type": "string"
                },
                "genesis_block_height": {
                    "description": "Height of the block in the blockchain where the genesis transaction of the inscription was recorded",
                    "type": "string"
                },
                "genesis_timestamp": {
                    "description": "Timestamp of the block in the blockchain where the genesis transaction of the inscription was recorded",
                    "type": "integer"
                },
                "id": {
                    "description": "Unique identifier for the inscription",
                    "type": "string"
                },
                "inscriptions_count": {
                    "description": "Total count of inscriptions",
                    "type": "integer"
                },
                "inscriptions_max": {
                    "description": "Total count of inscriptions",
                    "type": "integer"
                },
                "mined_tokens": {
                    "description": "The amount of tokens that have been mined",
                    "type": "string"
                },
                "name": {
                    "description": "Name for the inscription",
                    "type": "string"
                },
                "number": {
                    "description": "Number for the inscription",
                    "type": "integer"
                },
                "previous_name": {
                    "description": "Previous name for the inscription",
                    "type": "string"
                },
                "previous_tick": {
                    "description": "Previous The token ticker brc20name",
                    "type": "string"
                },
                "prize_pool_tokens": {
                    "description": "The amount of tokens that have been added to the prize pool",
                    "type": "string"
                },
                "tick": {
                    "description": "The token ticker brc20name",
                    "type": "string"
                },
                "total_burn": {
                    "description": "The total burn",
                    "type": "string"
                },
                "total_prize_pool_tokens": {
                    "description": "The cumulative total of tokens in the prize pool",
                    "type": "string"
                },
                "total_prize_round": {
                    "description": "The total prize round",
                    "type": "integer"
                }
            }
        },
        "satmine.Mrc721GenesisDataWeb": {
            "type": "object",
            "properties": {
                "block_height": {
                    "description": "Height of the block in the blockchain where the inscription was recorded",
                    "type": "string"
                },
                "genesis_address": {
                    "description": "Address associated with the genesis transaction of the inscription",
                    "type": "string"
                },
                "holders": {
                    "description": "Total Holders",
                    "type": "integer"
                },
                "id": {
                    "description": "Unique identifier for the inscription",
                    "type": "string"
                },
                "inscriptions_count": {
                    "description": "Total count of inscriptions",
                    "type": "integer"
                },
                "inscriptions_max": {
                    "description": "Total count of inscriptions",
                    "type": "integer"
                },
                "mined_tokens": {
                    "description": "The amount of tokens that have been mined",
                    "type": "string"
                },
                "mrc20_holders": {
                    "description": "mrc20_holders",
                    "type": "integer"
                },
                "mrc20_json": {
                    "description": "mrc20_json",
                    "type": "string"
                },
                "mrc721_img_id": {
                    "description": "mrc721_img_id",
                    "type": "string"
                },
                "name": {
                    "description": "Name for the inscription",
                    "type": "string"
                },
                "number": {
                    "description": "Number for the inscription",
                    "type": "integer"
                },
                "previous_name": {
                    "description": "Previous name for the inscription",
                    "type": "string"
                },
                "previous_tick": {
                    "description": "Previous The token ticker brc20name",
                    "type": "string"
                },
                "prize_pool_tokens": {
                    "description": "The amount of tokens that have been added to the prize pool",
                    "type": "string"
                },
                "tick": {
                    "description": "The token ticker brc20name",
                    "type": "string"
                },
                "total_prize_pool_tokens": {
                    "description": "The cumulative total of tokens in the prize pool",
                    "type": "string"
                }
            }
        },
        "satmine.SimpleHookBlock": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string"
                },
                "block_height": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "satmine.Token": {
            "type": "object",
            "properties": {
                "beg": {
                    "type": "string"
                },
                "dcr": {
                    "type": "string"
                },
                "halv": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                },
                "total": {
                    "type": "string"
                }
            }
        },
        "satmine.WebBurnInfo": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "boost": {
                    "type": "string"
                },
                "burn_amount": {
                    "type": "string"
                },
                "burn_max": {
                    "type": "string"
                },
                "mrc20name": {
                    "type": "string"
                },
                "mrc721name": {
                    "type": "string"
                },
                "power": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "satmine.WebCollectionItem": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "satmine.WebCollections": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/satmine.WebCollectionItem"
                }
            }
        },
        "satmine.WebInscription": {
            "type": "object",
            "properties": {
                "inscription": {
                    "$ref": "#/definitions/satmine.HookInscription"
                },
                "mined_amount": {
                    "description": "Number of final digs per inscription",
                    "type": "string"
                },
                "mrc20name": {
                    "type": "string"
                },
                "mrc721name": {
                    "type": "string"
                },
                "power": {
                    "description": "The arithmetic value of each inscription, determined by the BurnNum parameter, defaults to 1000.",
                    "type": "string"
                }
            }
        },
        "satmine.WebMrc20Bar": {
            "type": "object",
            "properties": {
                "avaliable": {
                    "type": "string"
                },
                "balance": {
                    "type": "string"
                },
                "mrc20name": {
                    "type": "string"
                },
                "transferable": {
                    "type": "string"
                }
            }
        },
        "satmine.WebMrc20Inscription": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "inscription": {
                    "$ref": "#/definitions/satmine.HookInscription"
                },
                "mrc20name": {
                    "type": "string"
                }
            }
        },
        "satmine.WebMrc721Bar": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "block_height": {
                    "type": "integer"
                },
                "first_721_id": {
                    "type": "string"
                },
                "mrc20name": {
                    "type": "string"
                },
                "mrc721name": {
                    "type": "string"
                },
                "total_power": {
                    "type": "string"
                },
                "total_reward": {
                    "type": "string"
                }
            }
        },
        "satmine.WebMrc721Holder": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "percentage": {
                    "type": "string"
                },
                "rank": {
                    "type": "string"
                }
            }
        },
        "satmine.WebMrcAllInscription": {
            "type": "object",
            "properties": {
                "genesis_data": {
                    "$ref": "#/definitions/satmine.Mrc721GenesisData"
                },
                "inscription": {
                    "$ref": "#/definitions/satmine.HookInscription"
                },
                "mrc20_protocol": {
                    "$ref": "#/definitions/satmine.MRC20Protocol"
                },
                "mrc721_protocol": {
                    "$ref": "#/definitions/satmine.MRC721Protocol"
                },
                "mrc_type": {
                    "type": "string"
                }
            }
        }
    }
}